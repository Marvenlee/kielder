diff -urN pdksh-5.2.12/config.h pdksh-5.2.12_new/config.h
--- pdksh-5.2.12/config.h	1970-01-01 00:00:00.000000000 +0000
+++ pdksh-5.2.12_new/config.h	2007-09-12 15:45:34.031250000 +0100
@@ -0,0 +1,351 @@
+/* config.h.  Generated automatically by configure.  */
+/* config.h.in.  Generated automatically from configure.in by autoheader.  */
+/*
+ * This file, acconfig.h, which is a part of pdksh (the public domain ksh),
+ * is placed in the public domain.  It comes with no licence, warranty
+ * or guarantee of any kind (i.e., at your own risk).
+ */
+
+#ifndef CONFIG_H
+#define CONFIG_H
+
+
+/* Define if on AIX 3.
+   System headers sometimes define this.
+   We just want to avoid a redefinition error message.  */
+#ifndef _ALL_SOURCE
+/* #undef _ALL_SOURCE */
+#endif
+
+/* Define if the closedir function returns void instead of int.  */
+/* #undef CLOSEDIR_VOID */
+
+/* Define to empty if the keyword does not work.  */
+/* #undef const */
+
+
+/* Define to `int' if <sys/types.h> doesn't define.  */
+/* #undef gid_t */
+
+/* Define if you have a working `mmap' system call.  */
+/* #undef HAVE_MMAP */
+
+/* Define if your struct stat has st_rdev.  */
+#define HAVE_ST_RDEV 1
+
+/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */
+#define HAVE_SYS_WAIT_H 1
+
+/* Define if you have <unistd.h>.  */
+#define HAVE_UNISTD_H 1
+
+/* Define if on MINIX.  */
+/* #undef _MINIX */
+
+/* Define to `int' if <sys/types.h> doesn't define.  */
+/* #undef mode_t */
+
+/* Define to `long' if <sys/types.h> doesn't define.  */
+/* #undef off_t */
+
+/* Define to `int' if <sys/types.h> doesn't define.  */
+/* #undef pid_t */
+
+/* Define if the system does not provide POSIX.1 features except
+   with this defined.  */
+/* #undef _POSIX_1_SOURCE */
+
+/* Define if you need to in order for stat and other things to work.  */
+/* #undef _POSIX_SOURCE */
+
+/* Define as the return type of signal handlers (int or void).  */
+#define RETSIGTYPE void
+
+/* Define if the `S_IS*' macros in <sys/stat.h> do not work properly.  */
+/* #undef STAT_MACROS_BROKEN */
+
+/* Define if `sys_siglist' is declared by <signal.h>.  */
+#define SYS_SIGLIST_DECLARED
+
+/* Define if you can safely include both <sys/time.h> and <time.h>.  */
+#define TIME_WITH_SYS_TIME 1
+
+/* Define to `int' if <sys/types.h> doesn't define.  */
+/* #undef uid_t */
+
+/* Define if the closedir function returns void instead of int.  */
+/* #undef VOID_CLOSEDIR */
+
+/* Define if your kernal doesn't handle scripts starting with #! */
+/* #undef SHARPBANG */
+
+/* Define if dup2() preserves the close-on-exec flag (ultrix does this) */
+/* #undef DUP2_BROKEN */
+
+/* Define as the return value of signal handlers (0 or ).  */
+#define RETSIGVAL 
+
+/* Define if you have posix signal routines (sigaction(), et. al.) */
+#define POSIX_SIGNALS 1
+
+/* Define if you have BSD4.2 signal routines (sigsetmask(), et. al.) */
+/* #undef BSD42_SIGNALS */
+
+/* Define if you have BSD4.1 signal routines (sigset(), et. al.) */
+/* #undef BSD41_SIGNALS */
+
+/* Define if you have v7 signal routines (signal(), signal reset on delivery) */
+/* #undef V7_SIGNALS */
+
+/* Define to use the fake posix signal routines (sigact.[ch]) */
+/* #undef USE_FAKE_SIGACT */
+
+/* Define if signals don't interrupt read() */
+/* #undef SIGNALS_DONT_INTERRUPT */
+
+/* Define if you have bsd versions of the setpgrp() and getpgrp() routines */
+/* #undef BSD_PGRP */
+
+/* Define if you have POSIX versions of the setpgid() and getpgrp() routines */
+/* #define POSIX_PGRP 1 */
+
+/* Define if you have sysV versions of the setpgrp() and getpgrp() routines */
+#define SYSV_PGRP 1
+
+/* Define if you don't have setpgrp(), setpgid() or getpgrp() routines */
+/* #undef NO_PGRP */
+
+/* Define to char if your compiler doesn't like the void keyword */
+/* #undef void */
+
+/* Define to nothing if compiler doesn't like the volatile keyword */
+/* #undef volatile */
+
+/* Define if C compiler groks function prototypes */
+#define HAVE_PROTOTYPES 1
+
+/* Define if C compiler groks __attribute__((...)) (const, noreturn, format) */
+#define HAVE_GCC_FUNC_ATTR 1
+
+/* Define to 32-bit signed integer type if <sys/types.h> doesn't define */
+/* #undef clock_t */
+
+/* Define to the type of struct rlimit fields if the rlim_t type is missing */
+/* #undef rlim_t */
+
+/* Define if time() is declared in <time.h> */
+#define TIME_DECLARED 1
+
+/* Define to `unsigned' if <signal.h> doesn't define */
+/* #undef sigset_t */
+
+/* Define if sys_errlist[] and sys_nerr are in the C library */
+#define HAVE_SYS_ERRLIST 1
+
+/* Define if sys_errlist[] and sys_nerr are defined in <errno.h> */
+#define SYS_ERRLIST_DECLARED 1
+
+/* Define if sys_siglist[] is in the C library */
+#define HAVE_SYS_SIGLIST 1
+
+/* Define if you have a sane <termios.h> header file */
+#define HAVE_TERMIOS_H 1
+
+/* Define if you have a memset() function in your C library */
+#define HAVE_MEMSET 1
+
+/* Define if you have a memmove() function in your C library */
+#define HAVE_MEMMOVE 1
+
+/* Define if you have a bcopy() function in your C library */
+/* #undef HAVE_BCOPY */
+
+/* Define if you have a lstat() function in your C library */
+#define HAVE_LSTAT 1
+
+/* Define if you have a sane <termio.h> header file */
+/* #undef HAVE_TERMIO_H */
+
+/* Define if you don't have times() or if it always returns 0 */
+/* #undef TIMES_BROKEN */
+
+/* Define if opendir() will open non-directory files */
+/* #undef OPENDIR_DOES_NONDIR */
+
+/* Define if the pgrp of setpgrp() can't be the pid of a zombie process */
+/* #undef NEED_PGRP_SYNC */
+
+/* Define if you arg running SCO unix */
+/* #undef OS_SCO */
+
+/* Define if you arg running ISC unix */
+/* #undef OS_ISC */
+
+/* Define if you arg running OS2 with the EMX library */
+/* #undef OS2 */
+
+/* Define if you have a POSIX.1 compatiable <sys/wait.h> */
+#define POSIX_SYS_WAIT 1
+
+/* Define if your OS maps references to /dev/fd/n to file descriptor n */
+/* #undef HAVE_DEV_FD */
+
+/* Default PATH (see comments in configure.in for more details) */
+#define DEFAULT_PATH "/bin:/usr/bin:/usr/ucb"
+
+/* Include ksh features? (see comments in configure.in for more details) */
+#define KSH 1
+
+/* Include emacs editing? (see comments in configure.in for more details) */
+#define EMACS 1
+
+/* Include vi editing? (see comments in configure.in for more details) */
+#define VI 1
+
+/* Include job control? (see comments in configure.in for more details) */
+#define JOBS 1
+
+/* Include brace-expansion? (see comments in configure.in for more details) */
+#define BRACE_EXPAND 1
+
+/* Include any history? (see comments in configure.in for more details) */
+#define HISTORY 1
+
+/* Include complex history? (see comments in configure.in for more details) */
+/* #undef COMPLEX_HISTORY */
+
+/* Strict POSIX behaviour? (see comments in configure.in for more details) */
+/* #undef POSIXLY_CORRECT */
+
+/* Specify default $ENV? (see comments in configure.in for more details) */
+/* #undef DEFAULT_ENV */
+
+/* Include shl(1) support? (see comments in configure.in for more details) */
+/* #undef SWTCH */
+
+/* Include game-of-life? (see comments in configure.in for more details) */
+#define SILLY
+
+/* The number of bytes in a int.  */
+#define SIZEOF_INT 4
+
+/* The number of bytes in a long.  */
+#define SIZEOF_LONG 4
+
+/* Define if you have the _setjmp function.  */
+/* #define HAVE__SETJMP 1 */
+
+/* Define if you have the confstr function.  */
+/* #undef HAVE_CONFSTR */
+
+/* Define if you have the flock function.  */
+#define HAVE_FLOCK 1
+
+/* Define if you have the getgroups function.  */
+/* #undef HAVE_GETGROUPS */
+
+/* Define if you have the getpagesize function.  */
+#define HAVE_GETPAGESIZE 1
+
+/* Define if you have the getrusage function.  */
+/* #undef HAVE_GETRUSAGE */
+
+/* Define if you have the getwd function.  */
+/* #define HAVE_GETWD 1 */
+
+/* Define if you have the killpg function.  */
+/* #define HAVE_KILLPG 1 */
+
+/* Define if you have the nice function.  */
+/* #define HAVE_NICE 1 */
+
+/* Define if you have the setrlimit function.  */
+#define HAVE_SETRLIMIT 1
+
+/* Define if you have the sigsetjmp function.  */
+/* #undef HAVE_SIGSETJMP */
+
+/* Define if you have the strcasecmp function.  */
+#define HAVE_STRCASECMP 1
+
+/* Define if you have the strerror function.  */
+#define HAVE_STRERROR 1
+
+/* Define if you have the strstr function.  */
+#define HAVE_STRSTR 1
+
+/* Define if you have the sysconf function.  */
+#define HAVE_SYSCONF 1
+
+/* Define if you have the tcsetpgrp function.  */
+#define HAVE_TCSETPGRP 1
+
+/* Define if you have the ulimit function.  */
+/* #undef HAVE_ULIMIT */
+
+/* Define if you have the valloc function.  */
+#define HAVE_VALLOC 1
+
+/* Define if you have the wait3 function.  */
+#define HAVE_WAIT3 1
+
+/* Define if you have the waitpid function.  */
+#define HAVE_WAITPID 1
+
+/* Define if you have the <dirent.h> header file.  */
+#define HAVE_DIRENT_H 1
+
+/* Define if you have the <fcntl.h> header file.  */
+#define HAVE_FCNTL_H 1
+
+/* Define if you have the <limits.h> header file.  */
+#define HAVE_LIMITS_H 1
+
+/* Define if you have the <memory.h> header file.  */
+/* #define HAVE_MEMORY_H 1 */
+
+/* Define if you have the <ndir.h> header file.  */
+/* #undef HAVE_NDIR_H */
+
+/* Define if you have the <paths.h> header file.  */
+#define HAVE_PATHS_H 1
+
+/* Define if you have the <stddef.h> header file.  */
+#define HAVE_STDDEF_H 1
+
+/* Define if you have the <stdlib.h> header file.  */
+#define HAVE_STDLIB_H 1
+
+/* Define if you have the <string.h> header file.  */
+#define HAVE_STRING_H 1
+
+/* Define if you have the <sys/dir.h> header file.  */
+/* #undef HAVE_SYS_DIR_H */
+
+/* Define if you have the <sys/ndir.h> header file.  */
+/* #undef HAVE_SYS_NDIR_H */
+
+/* Define if you have the <sys/param.h> header file.  */
+#define HAVE_SYS_PARAM_H 1
+
+/* Define if you have the <sys/resource.h> header file.  */
+#define HAVE_SYS_RESOURCE_H 1
+
+/* Define if you have the <sys/time.h> header file.  */
+#define HAVE_SYS_TIME_H 1
+
+/* Define if you have the <sys/wait.h> header file.  */
+#define HAVE_SYS_WAIT_H 1
+
+/* Define if you have the <ulimit.h> header file.  */
+/* #undef HAVE_ULIMIT_H */
+
+/* Define if you have the <values.h> header file.  */
+/* #undef HAVE_VALUES_H */
+
+/* Need to use a separate file to keep the configure script from commenting
+ * out the undefs....
+ */
+#include "conf-end.h"
+
+#endif /* CONFIG_H */
diff -urN pdksh-5.2.12/emacs.out pdksh-5.2.12_new/emacs.out
--- pdksh-5.2.12/emacs.out	1970-01-01 00:00:00.000000000 +0000
+++ pdksh-5.2.12_new/emacs.out	2007-09-04 09:43:24.046875000 +0100
@@ -0,0 +1,132 @@
+/*
+ * NOTE: THIS FILE WAS GENERATED AUTOMATICALLY FROM ./emacs.c
+ *
+ * DO NOT BOTHER EDITING THIS FILE
+ */
+#define XFUNC_abort 0
+static int x_abort ARGS((int c));
+#define XFUNC_beg_hist 1
+static int x_beg_hist ARGS((int c));
+#define XFUNC_comp_comm 2
+static int x_comp_comm ARGS((int c));
+#define XFUNC_comp_file 3
+static int x_comp_file ARGS((int c));
+#define XFUNC_complete 4
+static int x_complete ARGS((int c));
+#define XFUNC_del_back 5
+static int x_del_back ARGS((int c));
+#define XFUNC_del_bword 6
+static int x_del_bword ARGS((int c));
+#define XFUNC_del_char 7
+static int x_del_char ARGS((int c));
+#define XFUNC_del_fword 8
+static int x_del_fword ARGS((int c));
+#define XFUNC_del_line 9
+static int x_del_line ARGS((int c));
+#define XFUNC_draw_line 10
+static int x_draw_line ARGS((int c));
+#define XFUNC_end_hist 11
+static int x_end_hist ARGS((int c));
+#define XFUNC_end_of_text 12
+static int x_end_of_text ARGS((int c));
+#define XFUNC_enumerate 13
+static int x_enumerate ARGS((int c));
+#define XFUNC_eot_del 14
+static int x_eot_del ARGS((int c));
+#define XFUNC_error 15
+static int x_error ARGS((int c));
+#define XFUNC_goto_hist 16
+static int x_goto_hist ARGS((int c));
+#define XFUNC_ins_string 17
+static int x_ins_string ARGS((int c));
+#define XFUNC_insert 18
+static int x_insert ARGS((int c));
+#define XFUNC_kill 19
+static int x_kill ARGS((int c));
+#define XFUNC_kill_region 20
+static int x_kill_region ARGS((int c));
+#define XFUNC_list_comm 21
+static int x_list_comm ARGS((int c));
+#define XFUNC_list_file 22
+static int x_list_file ARGS((int c));
+#define XFUNC_literal 23
+static int x_literal ARGS((int c));
+#define XFUNC_meta1 24
+static int x_meta1 ARGS((int c));
+#define XFUNC_meta2 25
+static int x_meta2 ARGS((int c));
+#define XFUNC_meta_yank 26
+static int x_meta_yank ARGS((int c));
+#define XFUNC_mv_back 27
+static int x_mv_back ARGS((int c));
+#define XFUNC_mv_begin 28
+static int x_mv_begin ARGS((int c));
+#define XFUNC_mv_bword 29
+static int x_mv_bword ARGS((int c));
+#define XFUNC_mv_end 30
+static int x_mv_end ARGS((int c));
+#define XFUNC_mv_forw 31
+static int x_mv_forw ARGS((int c));
+#define XFUNC_mv_fword 32
+static int x_mv_fword ARGS((int c));
+#define XFUNC_newline 33
+static int x_newline ARGS((int c));
+#define XFUNC_next_com 34
+static int x_next_com ARGS((int c));
+#define XFUNC_nl_next_com 35
+static int x_nl_next_com ARGS((int c));
+#define XFUNC_noop 36
+static int x_noop ARGS((int c));
+#define XFUNC_prev_com 37
+static int x_prev_com ARGS((int c));
+#define XFUNC_prev_histword 38
+static int x_prev_histword ARGS((int c));
+#define XFUNC_search_char_forw 39
+static int x_search_char_forw ARGS((int c));
+#define XFUNC_search_char_back 40
+static int x_search_char_back ARGS((int c));
+#define XFUNC_search_hist 41
+static int x_search_hist ARGS((int c));
+#define XFUNC_set_mark 42
+static int x_set_mark ARGS((int c));
+#define XFUNC_stuff 43
+static int x_stuff ARGS((int c));
+#define XFUNC_stuffreset 44
+static int x_stuffreset ARGS((int c));
+#define XFUNC_transpose 45
+static int x_transpose ARGS((int c));
+#define XFUNC_version 46
+static int x_version ARGS((int c));
+#define XFUNC_xchg_point_mark 47
+static int x_xchg_point_mark ARGS((int c));
+#define XFUNC_yank 48
+static int x_yank ARGS((int c));
+#define XFUNC_comp_list 49
+static int x_comp_list ARGS((int c));
+#define XFUNC_expand 50
+static int x_expand ARGS((int c));
+#define XFUNC_fold_capitialize 51
+static int x_fold_capitialize ARGS((int c));
+#define XFUNC_fold_lower 52
+static int x_fold_lower ARGS((int c));
+#define XFUNC_fold_upper 53
+static int x_fold_upper ARGS((int c));
+#define XFUNC_set_arg 54
+static int x_set_arg ARGS((int c));
+#define XFUNC_comment 55
+static int x_comment ARGS((int c));
+#ifdef SILLY
+#define XFUNC_game_of_life 56
+static int x_game_of_life ARGS((int c));
+#else
+#endif
+#ifdef DEBUG
+#define XFUNC_debug_info 57
+static int x_debug_info ARGS((int c));
+#else
+#endif
+#ifdef OS2
+#define XFUNC_meta3 58
+static int x_meta3 ARGS((int c));
+#else
+#endif
diff -urN pdksh-5.2.12/makefile pdksh-5.2.12_new/makefile
--- pdksh-5.2.12/makefile	1970-01-01 00:00:00.000000000 +0000
+++ pdksh-5.2.12_new/makefile	2007-09-12 15:59:59.234375000 +0100
@@ -0,0 +1,146 @@
+CC = i386-kielder-gcc
+LINK:= i386-kielder-gcc
+OBJDUMP:= objdump
+CFLAGS:= -g -O
+DEFS = -DHAVE_CONFIG_H
+LIBS = 
+LDFLAGS:= 
+
+# ----------------------------------------------------------------------------
+# Rules for making object files from source files
+
+%.o : %.c
+	$(CC) -c $(CFLAGS) $(DEFS) $< -o $@
+
+%.o : %.s
+	$(AS) $< -o $@
+
+
+# ----------------------------------------------------------------------------
+# List of object files that make up the shell
+
+KSH_OBJ:= alloc.o c_ksh.o c_sh.o c_test.o c_ulimit.o edit.o emacs.o \
+		eval.o exec.o expr.o history.o io.o jobs.o lex.o mail.o \
+		main.o misc.o missing.o path.o shf.o sigact.o syn.o table.o \
+		trap.o tree.o tty.o var.o version.o vi.o
+
+
+# ----------------------------------------------------------------------------
+# Rule to make ksh executable from object files
+
+ksh :  $(KSH_OBJ)
+	$(LINK) $(KSH_OBJ) $(LDFLAGS) -o ksh
+
+
+
+# ----------------------------------------------------------------------------
+# Rule to delete object files, executable and objdump output
+
+.PHONY : clean
+clean :
+	rm -f *.o ksh dump.txt
+
+# ----------------------------------------------------------------------------
+# Make an image dump of the executable
+
+.PHONY : dump
+dump :
+	$(OBJDUMP) -xshDt ksh >dump.txt
+
+# ----------------------------------------------------------------------------
+# Copy KSH to disk image using mtools-mcopy
+
+.PHONY : disk
+disk :
+	mcopy -o ksh c:/bin
+
+
+# ----------------------------------------------------------------------------
+# DO NOT DELETE
+
+alloc.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h \
+ lex.h proto.h
+
+c_ksh.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h \
+ lex.h proto.h ksh_stat.h sh.h
+
+c_sh.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h ksh_time.h ksh_times.h sh.h
+
+c_test.o: sh.h config.h conf-end.h shf.h table.h tree.h \
+ expand.h lex.h proto.h ksh_stat.h c_test.h 
+
+c_ulimit.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_time.h sh.h
+
+edit.o: config.h conf-end.h sh.h shf.h table.h tree.h expand.h lex.h \
+ proto.h tty.h edit.h ksh_stat.h
+
+emacs.o: config.h conf-end.h sh.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h ksh_dir.h edit.h emacs.out
+
+eval.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_dir.h ksh_stat.h
+
+exec.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h c_test.h ksh_stat.h
+
+expr.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h sh.h
+ 
+history.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h
+
+io.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h
+
+jobs.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h ksh_wait.h ksh_times.h ksh_time.h tty.h sh.h
+
+lex.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h sh.h
+
+mail.o: config.h conf-end.h sh.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h ksh_time.h sh.h
+
+main.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h ksh_time.h sh.h
+
+misc.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h sh.h
+
+missing.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h ksh_dir.h ksh_time.h ksh_times.h sh.h
+
+path.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h
+
+shf.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h ksh_limval.h sh.h
+
+sigact.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h
+
+syn.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h c_test.h
+
+table.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h
+
+trap.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h siglist.out
+
+tree.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h
+
+tty.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h tty.h sh.h
+
+var.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_time.h ksh_limval.h ksh_stat.h sh.h
+
+version.o: sh.h config.h conf-end.h shf.h table.h tree.h expand.h lex.h \
+ proto.h
+
+vi.o: config.h conf-end.h sh.h shf.h table.h tree.h expand.h lex.h \
+ proto.h ksh_stat.h edit.h
diff -urN pdksh-5.2.12/sh.h pdksh-5.2.12_new/sh.h
--- pdksh-5.2.12/sh.h	1996-09-19 20:45:12.000000000 +0100
+++ pdksh-5.2.12_new/sh.h	2007-09-03 02:08:47.015625000 +0100
@@ -272,7 +272,7 @@
 #  define EXECSHELL	"c:\\os2\\cmd.exe"
 #  define EXECSHELL_STR	"OS2_SHELL"
 # else /* OS2 */
-#  define EXECSHELL	"/bin/sh"
+#  define EXECSHELL	"/bin/ksh"
 #  define EXECSHELL_STR	"EXECSHELL"
 # endif /* OS2 */
 #endif
diff -urN pdksh-5.2.12/siglist.out pdksh-5.2.12_new/siglist.out
--- pdksh-5.2.12/siglist.out	1970-01-01 00:00:00.000000000 +0000
+++ pdksh-5.2.12_new/siglist.out	2007-09-10 13:34:23.343750000 +0100
@@ -0,0 +1,31 @@
+ { 1 , "HUP", "Hangup" },
+ { 2 , "INT", "Interrupt" },
+ { 3 , "QUIT", "Quit" },
+ { 4 , "ILL", "Illegal instruction" },
+ { 5 , "TRAP", "Trace trap" },
+ { 6 , "ABRT", "Abort" },
+ { 7 , "EMT", "EMT trap" },
+ { 8 , "FPE", "Floating point exception" },
+ { 9 , "KILL", "Killed" },
+ { 10 , "BUS", "Bus error" },
+ { 11 , "SEGV", "Memory fault" },
+ { 12 , "SYS", "Bad system call" },
+ { 13 , "PIPE", "Broken pipe" },
+ { 14 , "ALRM", "Alarm clock" },
+ { 15 , "TERM", "Terminated" },
+ { 16 , "URG", "Urgent I/O condition" },
+ { 17 , "STOP", "Stopped (signal)" },
+ { 18 , "TSTP", "Stopped" },
+ { 19 , "CONT", "Continued" },
+ { 20 , "CHLD", "Child exited" },
+ { 21 , "TTIN", "Stopped (tty input)" },
+ { 22 , "TTOU", "Stopped (tty output)" },
+ { 23 , "IO", "I/O possible" },
+ { 24 , "XCPU", "CPU time limit exceeded" },
+ { 25 , "XFSZ", "File size limit exceeded" },
+ { 26 , "VTALRM", "Virtual timer expired" },
+ { 27 , "PROF", "Profiling timer expired" },
+ { 28 , "WINCH", "Window size change" },
+ { 29 , "LOST", "File lock lost" },
+ { 30 , "USR1", "User defined signal 1" },
+ { 31 , "USR2", "User defined signal 2" },
